@page "/weather"

@using WeatherApp.Data
@inject WeatherForecastService ForecastService
@inject IJSRuntime JSRuntime;

<h3>Weather</h3>

<button type="button" class="btn btn-primary" @onclick="GetWeather">
    Get Weather
</button>

adress = @ipaddress
@if (weatherAtLocation == null && ForecastService.IPAddress == null ) {
<p><em>Loading...</em></p>
} else {
<p>@ForecastService.IPAddress</p>
<p>@weatherAtLocation.Name</p>
<p>@weatherAtLocation.Coord.Lon</p>
<p>@weatherAtLocation.Coord.Lat</p>
<div>
    <p>Temperature: @weatherAtLocation.Main.Temp</p>
    <p>Feels like: @weatherAtLocation.Main.Feels_like</p>
</div>
}

@code {
   private WeatherReportModel weatherAtLocation;
   private string ipaddress = "::";

   protected override async Task OnInitializedAsync(){
        ipaddress = await JSRuntime.InvokeAsync<string>("getIP");
    }

    async Task GetWeather()
    {   
//        ipaddress = await JSRuntime.InvokeAsync<string>("getIP");
        await JSRuntime.InvokeVoidAsync("console.log", "Here...");
        await JSRuntime.InvokeVoidAsync("console.log", ipaddress);
        weatherAtLocation = await ForecastService.GetWeatherReport(ipaddress);
        StateHasChanged();
    }
}


